name: build
on: [push, pull_request]
jobs:
  build_linux:
    strategy:
      matrix:
        go-version: [1.19.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Build dependencies
        run: |
          sudo apt-get update
          sudo apt-get --no-install-recommends install build-essential libgles2 libgles2-mesa-dev libglib2.0-dev libxkbcommon-dev libxkbcommon-x11-dev libglu1-mesa-dev libxcursor-dev libwayland-dev libx11-xcb-dev libvulkan-dev

      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build for linux
        run: sudo make docker-build-linux

      - name: Upload binary artifact
        uses: actions/upload-artifact@v2
        with:
          name: katzen
          path: ./katzen

  build_windows:
    strategy:
      matrix:
        go-version: [1.19.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build for windows
        run: sudo make docker-build-windows

      - name: Upload binary artifact
        uses: actions/upload-artifact@v2
        with:
          name: katzen.exe
          path: ./katzen.exe

  build_macos:
    strategy:
      matrix:
        go-version: [1.19.x]
        os: [macos-11]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build for MacOS (amd64)
        run: GOARCH="amd64" go build -trimpath -ldflags=-buildid= -o katzen-macos-amd64

      - name: Build for MacOS (arm64)
        run: CGO_ENABLED=1 GOOS="darwin" GOARCH="arm64" go build -trimpath -ldflags=-buildid= -tags dynamic -o katzen-macos-arm64

      - name: Upload binary artifact
        uses: actions/upload-artifact@v2
        with:
          name: katzen-macos-amd64
          path: ./katzen-macos-amd64

      - name: Upload binary artifact
        uses: actions/upload-artifact@v2
        with:
          name: katzen-macos-arm64
          path: ./katzen-macos-arm64

  build_android:
    strategy:
      matrix:
        go-version: [1.19.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build for linux
        run: sudo make docker-build-android

      - name: Upload binary artifact
        uses: actions/upload-artifact@v2
        with:
          name: katzen.apk
          path: ./katzen.apk

  create_release:
    runs-on: ubuntu-latest
    needs: [build_linux, build_windows, build_macos, build_android]
    steps:
      - name: Download katzen linux
        uses: actions/download-artifact@v2
        with:
          name: katzen

      - name: Download katzen windows
        uses: actions/download-artifact@v2
        with:
          name: katzen.exe

      - name: Download katzen android
        uses: actions/download-artifact@v2
        with:
          name: katzen.apk

      - name: Download katzen macos
        uses: actions/download-artifact@v2
        with:
          name: katzen-macos-amd64

      - name: Download katzen macos
        uses: actions/download-artifact@v2
        with:
          name: katzen-macos-arm64

      - name: Hash and commit
        run: |
          sha256sum katzen katzen.apk katzen-macos-arm64 katzen-macos-amd64 katzen.exe > katzen.sha256

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: test_${{ github.sha}}
          release_name: Testing ${{ github.sha}}
          prerelease: true

      - name: Upload katzen.sha256
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./katzen.sha256
          asset_name: katzen.sha256
          asset_content_type: text/plain
